# chrono@2018
# sudo /opt/nginx_script/sbin/nginx -p `pwd`/..

master_process off;
daemon off;

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

stream {
    # nc 127.1 700
    server {
        listen 700;
        return "hello stream\n";
    }

    # nc 127.1 709
    server {
        listen 709;
        content_by_lua_file service/stream/discard.lua;
    }

    # nc 127.1 737
    server {
        listen 737;
        content_by_lua_file service/stream/time.lua;
    }

    # nc 127.1 707
    server {
        listen 707;
        preread_by_lua_file service/stream/echo.lua;
        content_by_lua_block {
            ngx.say("never reach here")
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    keepalive_timeout  60;

    include ngx_lua.conf;

    #main server
    server {
        listen       80;
        server_name  localhost;

        #access_log  logs/host.access.log  main;

        # Lua handler and filter
        location = /echo {
            content_by_lua_file         service/http/echo.lua;

            header_filter_by_lua_file   service/http/header_filter.lua;
            body_filter_by_lua_file     service/http/body_filter.lua;
        }

        # for subrequest test
        location = /allow {
            internal;
            return 200 "ok";
        }

        location = /deny {
            internal;
            return 403 "fibidden";
        }

        location = /sub {
            access_by_lua_file          service/http/sub.lua;
            content_by_lua_file         service/http/echo.lua;
        }

        # lua
        location ~ ^/(\w+) {
            #access_by_lua_file service/xxx.lua;

            content_by_lua_file service/http/$1.lua;

            #log_by_lua_file service/xxx.lua;
        }

        location / {
            return 200 "hello nginx\n";
        }

    }

}
